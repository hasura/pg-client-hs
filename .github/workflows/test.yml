name: Haskell CI

on:
  push: { branches: [ "main" ] }
  pull_request: { branches: [ "main" ] }

jobs:
  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ghc: [ "8.10.7", "9.2.2" ]
        cabal: [ "latest" ] 

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Install dependencies
        run: |
          sudo apt-get install libkrb5-dev libpq-dev libssl-dev

      - uses: actions/checkout@v2

      - uses: haskell/actions/setup@v1
        id: setup-haskell-cabal
        name: Setup cabal
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - uses: actions/cache@v2
        name: Cache cabal artifacts
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-cabal-${{ matrix.ghc }}-${{ hashFiles('ci/${{ matrix.ghc }}/ci.project.freeze') }}-0
          restore-keys: ${{ runner.os }}-cabal-${{ matrix.ghc }}-${{ hashFiles('ci/${{ matrix.ghc }}/ci.project.freeze') }}-0

      - name: Install dependencies
        run: |
          make update PROJECT='ci/${{ matrix.ghc }}/ci.project'
          make build-deps PROJECT='ci/${{ matrix.ghc }}/ci.project'

      - name: Build
        run: |
          make build-all PROJECT='ci/${{ matrix.ghc }}/ci.project'

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
        run: |
          make test-all PROJECT='ci/${{ matrix.ghc }}/ci.project'
